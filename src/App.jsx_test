import './App.css';
import Task from "./components/pages/Task"
import { useEffect, useState, useContext } from "react"
import axios from "axios";
import { API_BASEURL } from './utils/constants'
import { RailsTokenProvider } from './components/pages/providers/RailsTokenProvider'

import { BrowserRouter, Link } from "react-router-dom";
import { Router } from "./router/Router";

function App() {
  return(
    <BrowserRouter>
      <div className="App">
        <Link to="/">Home</Link>
        <br />
        <Link to="/page1">Page1</Link>
        <br />
        <Link to="/page2">Page2</Link>
        <Router />
      </div>
    </BrowserRouter>
  )
  // const initialTasks = [
  //   {
  //     name: "筋トレ",
  //     isDone: false
  //   },
  //   {
  //     name: "買い物",
  //     isDone: false
  //   },
  //   {
  //     name: "勉強",
  //     isDone: false
  //   }
  // ];
  // const token = useContext(RailsTokenProvider);
  // const [tasks, setTasks] = useState(initialTasks);
  // const [name, setName] = useState("")

  // const fetch = async() => {
  //   const res = await axios.get(API_BASEURL + "tasks")
  //   setTasks(res.data);
  // }
  // useEffect(() => {
  //   fetch();
  // }, []);

  // const createTasks = async() => {
  //   await axios.post(API_BASEURL + "tasks", {
  //     headers: {
  //       "X-CSRF-Token": token
  //     },
  //     name: name,
  //     is_done: false
  //   })
  //   setName("");
  //   fetch();
  // }

  // const destroyTask = async(id) => {
  //   await axios.delete(API_BASEURL + `tasks/${id}`, {
  //     headers: {
  //       "X-CSRF-Token": token
  //     }
  //   })
  //   fetch();
  // }

  // const toggleIsDone = (index) => {
  //   const tasksCopy = [...tasks]
  //   const isDone = tasksCopy[index].isDone;
  //   tasksCopy[index].isDone = !isDone;
  //   setTasks(tasksCopy);
  // };

  // return (
  //   <>
  //     <div style={{padding: "10px"}}>
  //       <div className={"header"}>
  //         <h2>タスク管理</h2>
  //       </div>
  //       <div>
  //         <input type="text" placeholder="タスク名を入力してください。" value={name} onChange={(e) => setName(e.target.value)} />
  //         <button onClick={createTasks}>タスクを作成</button>
  //       </div>
  //       <div className={"task-group"}>
  //         {tasks.map((task, index) => {
  //           return(
  //             <Task
  //               id={task.id}
  //               key={index}
  //               index={index}
  //               name={task.name}
  //               isDone={task.is_done}
  //               toggleIsDone={toggleIsDone}
  //               destroyTask={destroyTask}
  //             />
  //           );
  //         })}
  //       </div>
  //     </div>
  //   </>
  // );
}

export default App;
